// C3
//------------------------------------------------------------------------------
.C3BasePath			= 'C3'
.C3_Windows_MSVC	= [	
						.C3IncludePaths		= ' /I"$C3BasePath$"'
						.C3CompilerOptions	= ' /wd6262'	// Function uses '%u' bytes of stack:  exceeds /analyze:stacksize '16384'.  Consider moving some data to heap.
											+ ' /wd6319'
                      + ' /wd6385'
                      + ' /wd6011'
                      + ' /wd6255'
											+ ' /wd28251'	// warning C28251: Inconsistent annotation for '_setjmp': this instance has no annotations. See <no file>(0).
											+ ' /wd28252'
											+ ' /wd28253'
                      + ' /wd4100'
					  ]

{
	.ProjectName		= 'C3'
	.ProjectPath		= '$C3BasePath$/'
	.PCHName			= 'C3PCH'

	// Visual Studio Project Generation
	//--------------------------------------------------------------------------
	VCXProject( '$ProjectName$-proj' )
	{
		.ProjectOutput				= '../tmp/VisualStudio/Projects/$ProjectName$.vcxproj'
		.ProjectInputPaths			= '$ProjectPath$\'
		.ProjectBasePath			= '$ProjectPath$\'
	}
	
	// Only build specific files
	.CompilerInputPath        		= '$C3BasePath$\'

	// Windows (MSVC)
	//--------------------------------------------------------------------------
	ForEach( .Config in .Configs_Windows_MSVC )
	{
		Using( .Config )
		.OutputBase + '\$Platform$-$Config$'

		Using( .C3_Windows_MSVC )
		Using( .MathGeoLib_Windows_MSVC )
		Using( .LibIconv_Windows_MSVC )
		Using( .IMGUI_Windows_MSVC )
		Using( .Lz4_Windows_MSVC )

		// Static Library
		Library( '$ProjectName$-Lib-$Platform$-$Config$' )
		{
			.ExtraCompilerOptions		= .C3IncludePaths
										+ .C3CompilerOptions
										+ .MathGeoLibIncludePaths
										+ .LibIconvIncludePaths
										+ .IMGUIIncludePaths
										+ .Lz4IncludePaths

			.PCHInputFile				= '$C3BasePath$\$PCHName$.cpp'
			.PCHOutputFile				= '$OutputBase$\$ProjectName$\$PCHName$.pch'
			.PCHOptions					+ .ExtraCompilerOptions
										+ ' /Yc"$PCHName$.h"'

			// Output
			.CompilerOutputPath			= '$OutputBase$\$ProjectName$\'
 			.LibrarianOutput 			= '$OutputBase$\$ProjectName$\$ProjectName$.lib'

			.CompilerOptions			+ .ExtraCompilerOptions
										+ ' /Yu"$PCHName$.h"'
										+ ' /Fp"$PCHOutputFile$"'
		}
		Alias( '$ProjectName$-$Platform$-$Config$' ) { .Targets = '$ProjectName$-Lib-$Platform$-$Config$' }
	}

	// Aliases
	//--------------------------------------------------------------------------
	// Per-Config
	Alias( '$ProjectName$-Debug' )		{ .Targets = { '$ProjectName$-X86-Debug',   '$ProjectName$-X64-Debug' } }
	Alias( '$ProjectName$-Profile' )	{ .Targets = { '$ProjectName$-X86-Profile', '$ProjectName$-X64-Profile' } }
	Alias( '$ProjectName$-Release' )	{ .Targets = { '$ProjectName$-X86-Release', '$ProjectName$-X64-Release' } }

	// Per-Platform
	Alias( '$ProjectName$-X86' )		{ .Targets = { '$ProjectName$-X86-Debug', '$ProjectName$-X64-Release', '$ProjectName$-X86-Profile' } }
	Alias( '$ProjectName$-X64' )		{ .Targets = { '$ProjectName$-X64-Debug', '$ProjectName$-X64-Release', '$ProjectName$-X64-Profile' } }

	// All
	Alias( '$ProjectName$' )
	{
		.Targets = { '$ProjectName$-Debug', '$ProjectName$-Profile', '$ProjectName$-Release' }
	}
}
