// editor
//------------------------------------------------------------------------------
{
	.ProjectName		= 'editor'
	.ProjectPath		= '../Tool/editor'

	// Visual Studio Project Generation
	//--------------------------------------------------------------------------
	VCXProject( '$ProjectName$-proj' )
	{
		.ProjectOutput				= '../tmp/VisualStudio/Projects/$ProjectName$.vcxproj'
		.ProjectInputPaths			= '$ProjectPath$\'
		.ProjectBasePath			= '$ProjectPath$\'
		.ProjectAllowedFileExtensions   = { '.htm',
											'.html',
											'.tis',
											'.h',
											'.hpp',
											'.c',
											'.cpp',
											'.cc'
										}

		.LocalDebuggerCommand		= '^$(SolutionDir)..\^$(Configuration)\editor.exe'
		.LocalDebuggerWorkingDirectory = '^$(SolutionDir)..\..\Tool\editor\res'
	}

    // Unity
    //--------------------------------------------------------------------------
    {
        // Common options
        .UnityInputPath             = '$ProjectPath$\'
        .UnityOutputPath            = '$OutputBase$\Unity\$ProjectPath$\'

        // Windows
        Unity( '$ProjectName$-Unity-Windows' )
        {
        }
    }       

	// Windows (MSVC)
	//--------------------------------------------------------------------------
	ForEach( .Config in .Configs_Windows_MSVC )
	{
		Using( .Config )
		.OutputBase + '\$Platform$-$Config$'

		Using( .C3_Windows_MSVC )
		Using( .MathGeoLib_Windows_MSVC )
		Using( .LibIconv_Windows_MSVC )
		Using( .IMGUI_Windows_MSVC )
		Using( .FCPP_Windows_MSVC )
		Using( .Gason_Windows_MSVC )
		Using( .OptionParser_Windows_MSVC )
		Using( .LibSquish_Windows_MSVC )
		Using( .FreeImage_Windows_MSVC )
		Using( .Sciter_Windows_MSVC )
		Using( .Lz4_Windows_MSVC )
		
		// Objects
		ObjectList( '$ProjectName$-Lib-$Platform$-$Config$' )
		{
			// Input (Unity)
			.CompilerInputUnity			= '$ProjectName$-Unity-Windows'

			// Output
			.CompilerOutputPath			= '$OutputBase$\$ProjectName$\'
 			.LibrarianOutput 			= '$OutputBase$\$ProjectName$\$ProjectName$.lib'

			// Compiler Options
			.CompilerOptions			+ .C3IncludePaths
										+ .C3CompilerOptions
										+ .MathGeoLibIncludePaths
										+ .MathGeoLibCompilerOptions
										+ .LibIconvIncludePaths
										+ .IMGUIIncludePaths
										+ .FCPPIncludePaths
										+ .GasonIncludePaths
										+ .OptionParserIncludePaths
										+ .LibSquishIncludePaths
										+ .FreeImageIncludePaths
										+ .SciterIncludePaths
										+ .Lz4IncludePaths
										+ ' /wd4201'
										+ ' /wd4263'
										+ ' /wd4555'
										+ ' /wd28183'
		}

		// Executable
		Executable( '$ProjectName$-Exe-$Platform$-$Config$' )
		{
			.Libraries					=
			{
				'C3-Lib-$Platform$-$Config$',
				'editor-Lib-$Platform$-$Config$',
				'LibIconv-Lib-$Platform$-$Config$',
				'MathGeoLib-Lib-$Platform$-$Config$',
				'IMGUI-Lib-$Platform$-$Config$',
				'FCPP-Lib-$Platform$-$Config$',
				'Gason-Lib-$Platform$-$Config$',
				'OptionParser-Lib-$Platform$-$Config$',
				'LibSquish-Lib-$Platform$-$Config$',
				'FreeImage-Lib-$Platform$-$Config$',
				'Sciter-Lib-$Platform$-$Config$',
				'Lz4-Lib-$Platform$-$Config$',
			}
			.LinkerOutput				= '$OutputBase$\editor.exe'
			.LinkerOptions				+ ' /SUBSYSTEM:WINDOWS'
										+ ' kernel32.lib'
										+ ' user32.lib'
										+ ' Ws2_32.lib'
										+ ' OpenGL32.LIB'
										+ ' Shell32.lib'
										+ ' DbgHelp.lib'
										+ ' dxgi.lib'
										+ ' d3d11.lib'
										+ ' d3dcompiler.lib'
										+ ' Ole32.lib'
										+ ' imm32.lib'
		}
		Alias( '$ProjectName$-$Platform$-$Config$' )
		{
			.Targets 					= { '$ProjectName$-Exe-$Platform$-$Config$',
											'Copy-LibIconv-DLL-$Platform$-$Config$',
											'Copy-FreeImage-DLL-$Platform$-$Config$',
											'Copy-Sciter-DLL-$Platform$-$Config$',
										}
		}
	}

	// Aliases
	//--------------------------------------------------------------------------
	// Per-Config
	Alias( '$ProjectName$-Debug' )		{ .Targets = { '$ProjectName$-X86-Debug',   '$ProjectName$-X64-Debug' } }
	Alias( '$ProjectName$-Profile' )	{ .Targets = { '$ProjectName$-X86-Profile', '$ProjectName$-X64-Profile' } }
	Alias( '$ProjectName$-Release' )	{ .Targets = { '$ProjectName$-X86-Release', '$ProjectName$-X64-Release' } }

	// Per-Platform
	Alias( '$ProjectName$-X86' )		{ .Targets = { '$ProjectName$-X86-Debug', '$ProjectName$-X86-Release', '$ProjectName$-X86-Profile' } }
	Alias( '$ProjectName$-X64' )		{ .Targets = { '$ProjectName$-X64-Debug', '$ProjectName$-X64-Release', '$ProjectName$-X64-Profile' } }

	// All
	Alias( '$ProjectName$' )
	{
		.Targets = { '$ProjectName$-Debug', '$ProjectName$-Profile', '$ProjectName$-Release' }
	}
}
